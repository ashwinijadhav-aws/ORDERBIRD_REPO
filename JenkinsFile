pipeline {
  agent any 
  tools { maven 'Maven_Local' }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        sh 'printenv'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    } 
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'mvn clean package'
      }
    }
  /*  stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://18.192.66.2:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonar-cred', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }*/
    stage('Build Docker Image') {
        environment {
          DOCKER_IMAGE = "ashwinijadhavaws/orderbird-app-prod-image:${BUILD_NUMBER}"
        }
        steps {
          script {
              sh 'docker build -t ${DOCKER_IMAGE} .'
              }
          }
    }
    stage('Scan image with Trivy') {
            steps {
                sh 'trivy image --exit-code 1 --ignore-unfixed CVE-2016-1000027,CVE-2022-22965 --severity HIGH,CRITICAL --format json --output results.json ashwinijadhavaws/orderbird-app-prod-image:${BUILD_NUMBER}'

            }
    }
    stage('Push Docker Image') {
            environment {
              REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            steps {
              script {
                      def dockerImage = docker.image("${DOCKER_IMAGE}")
                      docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                      dockerImage.push()
                  }
              }
           }
   }
  }

   post {
        always {
                archiveArtifacts artifacts: "results.json", fingerprint: true
            }
        } 
}
